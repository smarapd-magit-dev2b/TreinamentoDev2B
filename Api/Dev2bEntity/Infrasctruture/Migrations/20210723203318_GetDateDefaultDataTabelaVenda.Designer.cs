// <auto-generated />
using System;
using Infrasctruture.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrasctruture.Migrations
{
    [DbContext(typeof(Dev2bEntityDbContext))]
    [Migration("20210723203318_GetDateDefaultDataTabelaVenda")]
    partial class GetDateDefaultDataTabelaVenda
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("VARCHAR(14)")
                        .HasColumnName("cpf");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("DATETIME")
                        .HasColumnName("dataNascimento");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("nome");

                    b.Property<string>("Rg")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("VARCHAR(12)")
                        .HasColumnName("rg");

                    b.Property<string>("Sexo")
                        .HasMaxLength(1)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("sexo");

                    b.Property<string>("Telefone")
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("telefone");

                    b.HasKey("Id");

                    b.HasIndex("Cpf")
                        .IsUnique();

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("cliente");
                });

            modelBuilder.Entity("Domain.Entities.ItensVenda", b =>
                {
                    b.Property<int>("IdVenda")
                        .HasColumnType("INT");

                    b.Property<int>("IdProduto")
                        .HasColumnType("INT");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int")
                        .HasColumnName("quantidade");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("DECIMAL(16,2)")
                        .HasColumnName("valorTotal");

                    b.HasKey("IdVenda", "IdProduto");

                    b.HasIndex("IdProduto");

                    b.ToTable("itemVenda");
                });

            modelBuilder.Entity("Domain.Entities.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataInclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("dataInclusao")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("descricao");

                    b.Property<decimal>("Preco")
                        .HasColumnType("DECIMAL(16,2)")
                        .HasColumnName("preco");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INT")
                        .HasColumnName("quantidade");

                    b.HasKey("Id");

                    b.HasIndex("Descricao")
                        .IsUnique();

                    b.ToTable("produto");
                });

            modelBuilder.Entity("Domain.Entities.Venda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("dataVenda")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("IdCliente")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.ToTable("venda");
                });

            modelBuilder.Entity("Domain.Entities.ItensVenda", b =>
                {
                    b.HasOne("Domain.Entities.Produto", "Produto")
                        .WithMany("ItensVenda")
                        .HasForeignKey("IdProduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Venda", "Venda")
                        .WithMany("ListItensVenda")
                        .HasForeignKey("IdVenda")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");

                    b.Navigation("Venda");
                });

            modelBuilder.Entity("Domain.Entities.Venda", b =>
                {
                    b.HasOne("Domain.Entities.Cliente", "Cliente")
                        .WithMany("Venda")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Domain.Entities.Cliente", b =>
                {
                    b.Navigation("Venda");
                });

            modelBuilder.Entity("Domain.Entities.Produto", b =>
                {
                    b.Navigation("ItensVenda");
                });

            modelBuilder.Entity("Domain.Entities.Venda", b =>
                {
                    b.Navigation("ListItensVenda");
                });
#pragma warning restore 612, 618
        }
    }
}
